#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT    0
#define SETTINGS   1
#define QWERTY     2
#define NAVIGATION 3
#define SYMBOLS    4

// NOTES:
// * 'tapping-term-ms':
//   - Increase value if triggers the hold action when you meant to tap
//   - Decrease value if it feels too long for hold action to trigger
//
// * 'quick-tap-ms':
//   - Allows to repeart tap functionality of the 'hold-tap' key by holding it after
//     the initial press.
//   - Increase value if you can't get a key to repeat after press-hold action.

/ {
    behaviors {
      #include "macros.dtsi"

      hold_tap: hold_tap {
          compatible = "zmk,behavior-hold-tap";
          label = "hold_tap";
          #binding-cells = <2>;
          tapping-term-ms = <175>;
          quick-tap-ms = <200>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
      // Momentary layer or key press. Essentially equivalent to the Layer-Tap, i.e. &lt
      mo_kp: mo_kp {
          compatible = "zmk,behavior-hold-tap";
          label = "mo_kp";
          #binding-cells = <2>;
          tapping-term-ms = <175>;
          quick-tap-ms = <200>;
          flavor = "tap-preferred";
          bindings = <&mo>, <&kp>;
      };
    };
    macros {
      ZMK_MACRO(tmux_prev,
          wait-ms = <30>;
          tap-ms = <40>;
          bindings
            = <&macro_press &kp LALT>
            , <&macro_tap &kp LEFT>
            , <&macro_release &kp LALT>
            ;
      )
      ZMK_MACRO(tmux_next,
          wait-ms = <30>;
          tap-ms = <40>;
          bindings
            = <&macro_press &kp LALT>
            , <&macro_tap &kp RIGHT>
            , <&macro_release &kp LALT>
            ;
      )
      ZMK_MACRO(tmux_split_v,
          wait-ms = <30>;
          tap-ms = <40>;
          bindings
            = <&macro_press &kp LCTRL>
            , <&macro_tap &kp B>
            , <&macro_release &kp LCTRL>
            , <&macro_tap &kp BACKSLASH>
            ;
      )
      ZMK_MACRO(tmux_split_h,
          wait-ms = <30>;
          tap-ms = <40>;
          bindings
            = <&macro_press &kp LCTRL>
            , <&macro_tap &kp B>
            , <&macro_release &kp LCTRL>
            , <&macro_tap &kp MINUS>
            ;
      )
      ZMK_MACRO(tmux_zoom,
          wait-ms = <30>;
          tap-ms = <40>;
          bindings
            = <&macro_press &kp LCTRL>
            , <&macro_tap &kp B>
            , <&macro_release &kp LCTRL>
            , <&macro_tap &kp Z>
            ;
      )
    };

  #define __0__ &hold_tap F10 N0
  #define __1__ &hold_tap F1  N1
  #define __2__ &hold_tap F2  N2
  #define __3__ &hold_tap F3  N3
  #define __4__ &hold_tap F4  N4
  #define __5__ &hold_tap F5  N5
  #define __6__ &hold_tap F6  N6
  #define __7__ &hold_tap F7  N7
  #define __8__ &hold_tap F8  N8
  #define __9__ &hold_tap F9  N9

  #define __A__ &hold_tap LSHFT A
  #define __B__ &hold_tap LG(B) B
  #define __C__ &hold_tap LG(C) C
  #define __D__ &kp D
  #define __E__ &kp E
  #define __F__ &hold_tap LG(F) F
  #define __G__ &kp G
  #define __H__ &kp H
  #define __I__ &kp I
  #define __J__ &kp J
  #define __K__ &kp K
  #define __L__ &kp L
  #define __M__ &kp M
  #define __N__ &kp N
  #define __O__ &hold_tap RSHFT O
  #define __P__ &kp P
  #define __Q__ &kp Q
  #define __R__ &hold_tap LALT  R
  #define __S__ &hold_tap LGUI  S
  #define __T__ &mo_kp NAVIGATION T
  #define __U__ &kp U
  #define __V__ &hold_tap LG(V) V
  #define __W__ &kp W
  #define __X__ &hold_tap LG(X) X
  #define __Y__ &kp Y
  #define __Z__ &kp Z

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp F12         __1__     __2__    __3__    __4__     __5__ &none                                                                                 &mo SETTINGS __6__ __7__  __8__     __9__    __0__    &hold_tap F11 EQUAL
        &kp TAB         __Q__     __W__    __F__    __P__     __G__ &none                                                                                 &none        __J__ __L__  __U__     __Y__    &kp SEMI &kp MINUS
        &kp ESC         __A__     __R__    __S__    __T__     __D__ &none                          &kp LGUI  &kp LALT      &kp DELETE &kp RCTRL           &none        __H__ __N__  __E__     __I__    __O__    &kp SINGLE_QUOTE
        &lt SYMBOLS ESC __Z__     __X__    __C__    __V__     __B__                                          &tmux_zoom    &kp PG_UP                                   __K__ __M__  &kp COMMA &kp DOT  &kp FSLH &mo SYMBOLS
        &none           &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT             &hold_tap LCTRL BSPC &tmux_split_h &tmux_split_v &none      &kp ENTER &kp SPACE                    &kp UP &kp DOWN  &kp LBKT &kp RBKT &none
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &out OUT_USB
        &none &none        &none        &none        &none        &none                                      &none &none                                                        &none        &none        &none        &none &none &out OUT_BLE
        &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &out OUT_TOG
      >;
    };
    qwerty_layer {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4    &kp N5 &none                                                           &mo SETTINGS &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R     &kp T  &none                                                           &none        &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
        &kp ESC   &kp A     &kp S    &kp D    &kp F     &kp G  &none          &kp LCTRL &kp LALT &kp LGUI  &kp RCTRL           &none        &kp H  &kp J  &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V     &kp B                           &kp HOME &kp PG_UP                                  &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &none     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT              &kp BSPC &kp DEL   &kp END  &kp PG_DN &kp ENTER &kp SPACE                     &kp UP &kp DOWN  &kp LBKT &kp RBKT &none
      >;
    };
    navigation_layer {
      bindings = <
        &none &none  &none  &none  &none  &none &none                                       &none &none    &none      &none  &none     &none      &none
        &none &none  &none  &none  &none  &none &none                                       &none &none    &none      &none  &none     &none      &none
        &none &trans &trans &trans &trans &none &none        &trans &none &none &none       &none &kp LEFT &kp DOWN   &kp UP &kp RIGHT &none      &none
        &none &none  &none  &none  &none  &none                     &none &none                   &none    &tmux_prev &none  &none     &tmux_next &none
        &none &none  &none  &none  &none              &trans &none  &none &none &none &none                &none      &none  &none     &none      &none
      >;
    };
    symbols_layer {
      bindings = <
        &none &none           &none             &none            &none             &none       &none                                     &none &none     &none          &none         &none                &none                 &none
        &none &kp EXCLAMATION &kp AT_SIGN       &kp HASH         &kp DOLLAR        &kp PERCENT &none                                     &none &kp PLUS  &kp AMPERSAND  &kp ASTERISK  &none                &kp COLON             &none
        &none &kp GRAVE       &kp DOUBLE_QUOTES &kp LEFT_BRACE   &kp RIGHT_BRACE   &none       &none       &none &none &none &none       &none &kp CARET &kp UNDERSCORE &kp MINUS     &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &none
        &none &kp PIPE        &kp BACKSLASH     &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp TILDE                     &none &none                   &none     &kp EQUAL      &kp LESS_THAN &kp GREATER_THAN     &kp QUESTION          &none
        &none &none           &none             &none            &none                               &none &none &none &none &none &none                 &none          &none         &none                &none                 &none
      >;
    };
  };
};
