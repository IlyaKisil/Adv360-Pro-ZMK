#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT    0
#define SETTINGS   1
#define QWERTY     2
#define NAVIGATION 3

/ {
    behaviors {
      #include "macros.dtsi"

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
      // Momentary layer or key press. Essentially equivalent to the Layer-Tap, i.e. &lt
      mo_kp: mo_kp {
          compatible = "zmk,behavior-hold-tap";
          label = "mo_kp";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&mo>, <&kp>;
      };
    };
    macros {
      ZMK_MACRO(tmux_prev,
          wait-ms = <30>;
          tap-ms = <40>;
          bindings
            = <&macro_press &kp LALT>
            , <&macro_tap &kp LEFT>
            , <&macro_release &kp LALT>
            ;
      )
      ZMK_MACRO(tmux_next,
          wait-ms = <30>;
          tap-ms = <40>;
          bindings
            = <&macro_press &kp LALT>
            , <&macro_tap &kp RIGHT>
            , <&macro_release &kp LALT>
            ;
      )
      ZMK_MACRO(tmux_split_v,
          wait-ms = <30>;
          tap-ms = <40>;
          bindings
            = <&macro_press &kp LCTRL>
            , <&macro_tap &kp B>
            , <&macro_release &kp LCTRL>
            , <&macro_tap &kp BACKSLASH>
            ;
      )
      ZMK_MACRO(tmux_split_h,
          wait-ms = <30>;
          tap-ms = <40>;
          bindings
            = <&macro_press &kp LCTRL>
            , <&macro_tap &kp B>
            , <&macro_release &kp LCTRL>
            , <&macro_tap &kp MINUS>
            ;
      )
      ZMK_MACRO(tmux_zoom,
          wait-ms = <30>;
          tap-ms = <40>;
          bindings
            = <&macro_press &kp LCTRL>
            , <&macro_tap &kp B>
            , <&macro_release &kp LCTRL>
            , <&macro_tap &kp Z>
            ;
      )
    };

  // Home row mods
  #define _A_SFT &hm LSHFT A         // Pinky finger:  Shift
  #define _O_SFT &hm RSHFT O         // Pinky finger:  Shift
  #define _R_OPT &hm LALT  R         // Ring finger:   Option
  #define _S_CMD &hm LGUI  S         // Middle finger: Command
  // #define _T_NAV &mo_kp NAVIGATION T // Index finger:  Switch to navigation layer
  #define _T_NAV &lt NAVIGATION T // Index finger:  Switch to navigation layer

  #define _F_CMD &mt LG(F) F
  #define _X_CMD &mt LG(X) X
  #define _C_CMD &mt LG(C) C
  #define _V_CMD &mt LG(V) V
  #define _B_CMD &mt LG(B) B

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4    &kp N5 &none                                                                 &mo SETTINGS &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W    _F_CMD   &kp P     &kp G  &none                                                                 &none        &kp J  &kp L  &kp U     &kp Y    &kp SEMI &kp BSLH
        &kp ESC   _A_SFT    _R_OPT   _S_CMD   _T_NAV    &kp D  &none          &kp LGUI  &kp LALT      &kp LGUI   &kp RCTRL           &none        &kp H  &kp N  &kp E     &kp I    _O_SFT   &kp SQT
        &kp LSHFT &kp Z     _X_CMD   _C_CMD   _V_CMD    _B_CMD                          &tmux_split_v &kp PG_UP                                   &kp K  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &none     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT              &kp BSPC &kp LCTRL &tmux_split_h &tmux_zoom &kp ENTER &kp SPACE                     &kp UP &kp DOWN  &kp LBKT &kp RBKT &none
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &out OUT_USB
        &none &none        &none        &none        &none        &none                                      &none &none                                                        &none        &none        &none        &none &none &out OUT_BLE
        &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &out OUT_TOG
      >;
    };
    qwerty_layer {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4    &kp N5 &none                                                           &mo SETTINGS &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R     &kp T  &none                                                           &none        &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
        &kp ESC   &kp A     &kp S    &kp D    &kp F     &kp G  &none          &kp LCTRL &kp LALT &kp LGUI  &kp RCTRL           &none        &kp H  &kp J  &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V     &kp B                           &kp HOME &kp PG_UP                                  &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &none     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT              &kp BSPC &kp DEL   &kp END  &kp PG_DN &kp ENTER &kp SPACE                     &kp UP &kp DOWN  &kp LBKT &kp RBKT &none
      >;
    };
    navigation_layer {
      bindings = <
        &none &none  &none  &none  &none  &none &none                                       &none &none    &none      &none  &none     &none      &none
        &none &none  &none  &none  &none  &none &none                                       &none &none    &none      &none  &none     &none      &none
        &none &trans &trans &trans &trans &none &none        &trans &none &none &none       &none &kp LEFT &kp DOWN   &kp UP &kp RIGHT &none      &none
        &none &none  &none  &none  &none  &none                     &none &none                   &none    &tmux_prev &none  &none     &tmux_next &none
        &none &none  &none  &none  &none              &trans &none  &none &none &none &none                &none      &none  &none     &none      &none
      >;
    };
  };
};
